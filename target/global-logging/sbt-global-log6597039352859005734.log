[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (Oracle Corporation Java 1.8.0_333)
[warn] sbt version mismatch, using: 1.7.1, in build.properties: "1.7.0", use 'reboot' to use the new value.
[debug]                                     Load.loadUnit: plugins took 15.8073ms
[debug]                                     Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\DELL\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7103 ms
[debug]                                         Load.resolveProject(global-plugins) took 0.8051ms
[debug]                                       Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\DELL\.sbt\1.0\plugins, plugins: List(<none>))) took 1.7627ms
[debug] [Loading] Done in C:\Users\DELL\.sbt\1.0\plugins, returning: (global-plugins)
[debug]                                     Load.loadUnit: loadedProjectsRaw took 2.688ms
[debug]                                     Load.loadUnit: cleanEvalClasses took 0.007ms
[debug]                                   Load.loadUnit(file:/C:/Users/DELL/.sbt/1.0/plugins/, ...) took 19.1616ms
[debug]                                 Load.apply: load took 20.2836ms
[debug]                                 Load.apply: resolveProjects took 0.1075ms
[debug]                                 Load.apply: finalTransforms took 4.4225ms
[debug]                                 Load.apply: config.delegates took 0.3784ms
[debug]                                 Load.apply: Def.make(settings)... took 31.7201ms
[debug]                                 Load.apply: structureIndex took 11.0231ms
[debug]                                 Load.apply: mkStreams took 0.0104ms
[info] loading global plugins from C:\Users\DELL\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]                               Load.defaultLoad until apply took 377.1651ms
[debug]                                         Load.loadUnit: plugins took 19.6194ms
[debug]                                         Load.loadUnit: defsScala took 0.0069ms
[debug] [Loading] Scanning directory C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project
[debug]                                           Load.loadUnit: mkEval took 0.392ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7391 ms
[info] loading settings for project clickstream-data-pipeline-build from idea1.sbt ...
[debug]                                             Load.resolveProject(clickstream-data-pipeline-build) took 3.4704ms
[debug]                                           Load.loadTransitive: finalizeProject(Project(id clickstream-data-pipeline-build, base: C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project, plugins: List(<none>))) took 4.7689ms
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project, returning: (clickstream-data-pipeline-build)
[debug]                                         Load.loadUnit: loadedProjectsRaw took 23.4747ms
[debug]                                         Load.loadUnit: cleanEvalClasses took 1.8442ms
[debug]                                       Load.loadUnit(file:/C:/Users/DELL/Desktop/sparkAssignment/de/clickstream-data-pipeline/project/, ...) took 45.8897ms
[debug]                                     Load.apply: load took 46.844ms
[debug]                                     Load.apply: resolveProjects took 0.0758ms
[debug]                                     Load.apply: finalTransforms took 3.6283ms
[debug]                                     Load.apply: config.delegates took 0.1785ms
[debug]                                     Load.apply: Def.make(settings)... took 49.1681ms
[debug]                                     Load.apply: structureIndex took 8.0086ms
[debug]                                     Load.apply: mkStreams took 0.0164ms
[info] loading project definition from C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]                                   Load.loadUnit: plugins took 205.7353ms
[debug]                                   Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline
[debug]                                     Load.loadUnit: mkEval took 0.3428ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4018 ms
[info] loading settings for project clickstream-data-pipeline from build.sbt ...
[debug]                                       Load.resolveProject(clickstream-data-pipeline) took 39.2913ms
[debug]                                     Load.loadTransitive: finalizeProject(Project(id clickstream-data-pipeline, base: C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline, plugins: List(<none>))) took 41.1941ms
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline, returning: (clickstream-data-pipeline)
[debug]                                   Load.loadUnit: loadedProjectsRaw took 804.4206ms
[debug]                                   Load.loadUnit: cleanEvalClasses took 10.6796ms
[debug]                                 Load.loadUnit(file:/C:/Users/DELL/Desktop/sparkAssignment/de/clickstream-data-pipeline/, ...) took 1021.2685ms
[debug]                               Load.apply: load took 1022.8224ms
[debug]                               Load.apply: resolveProjects took 0.1197ms
[debug]                               Load.apply: finalTransforms took 12.5703ms
[debug]                               Load.apply: config.delegates took 0.1955ms
[debug]                               Load.apply: Def.make(settings)... took 59.6873ms
[debug]                               Load.apply: structureIndex took 17.0826ms
[debug]                               Load.apply: mkStreams took 0.004ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to ignite-spark-assignments (in build file:/C:/Users/DELL/Desktop/sparkAssignment/de/clickstream-data-pipeline/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
