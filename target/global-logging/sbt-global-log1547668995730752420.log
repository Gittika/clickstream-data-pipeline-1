[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.0 (Oracle Corporation Java 1.8.0_333)
[debug]       Load.loadUnit: plugins took 17.0787ms
[debug]       Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\DELL\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.2681 ms
[debug]           Load.resolveProject(global-plugins) took 1.1152ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\DELL\.sbt\1.0\plugins, plugins: List(<none>))) took 5.7573ms
[debug] [Loading] Done in C:\Users\DELL\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 6.729ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0129ms
[debug]     Load.loadUnit(file:/C:/Users/DELL/.sbt/1.0/plugins/, ...) took 24.4458ms
[debug]   Load.apply: load took 25.9367ms
[debug]   Load.apply: resolveProjects took 0.1001ms
[debug]   Load.apply: finalTransforms took 5.8305ms
[debug]   Load.apply: config.delegates took 0.4161ms
[debug]   Load.apply: Def.make(settings)... took 46.9739ms
[debug]   Load.apply: structureIndex took 15.9026ms
[debug]   Load.apply: mkStreams took 0.003ms
[info] loading global plugins from C:\Users\DELL\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 368.4393ms
[debug]           Load.loadUnit: plugins took 19.6314ms
[debug]           Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project
[debug]             Load.loadUnit: mkEval took 0.4195ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3459 ms
[info] loading settings for project clickstream-data-pipeline-build from idea.sbt ...
[debug]               Load.resolveProject(clickstream-data-pipeline-build) took 2.4773ms
[debug]             Load.loadTransitive: finalizeProject(Project(id clickstream-data-pipeline-build, base: C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project, plugins: List(<none>))) took 4.2786ms
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project, returning: (clickstream-data-pipeline-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 24.4401ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.6086ms
[debug]         Load.loadUnit(file:/C:/Users/DELL/Desktop/sparkAssignment/de/clickstream-data-pipeline/project/, ...) took 45.1653ms
[debug]       Load.apply: load took 46.2389ms
[debug]       Load.apply: resolveProjects took 0.0896ms
[debug]       Load.apply: finalTransforms took 5.1523ms
[debug]       Load.apply: config.delegates took 0.2535ms
[debug]       Load.apply: Def.make(settings)... took 46.5387ms
[debug]       Load.apply: structureIndex took 18.1581ms
[debug]       Load.apply: mkStreams took 0.0035ms
[info] loading project definition from C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 286.8854ms
[debug]     Load.loadUnit: defsScala took 0.0103ms
[debug] [Loading] Scanning directory C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline
[debug]       Load.loadUnit: mkEval took 0.3355ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6102 ms
[info] loading settings for project clickstream-data-pipeline from build.sbt ...
[debug]         Load.resolveProject(clickstream-data-pipeline) took 26.0233ms
[debug]       Load.loadTransitive: finalizeProject(Project(id clickstream-data-pipeline, base: C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline, plugins: List(<none>))) took 28.1343ms
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline, returning: (clickstream-data-pipeline)
[debug]     Load.loadUnit: loadedProjectsRaw took 98.0621ms
[debug]     Load.loadUnit: cleanEvalClasses took 3.9021ms
[debug]   Load.loadUnit(file:/C:/Users/DELL/Desktop/sparkAssignment/de/clickstream-data-pipeline/, ...) took 389.4653ms
[debug] Load.apply: load took 390.941ms
[debug] Load.apply: resolveProjects took 0.1186ms
[debug] Load.apply: finalTransforms took 16.7766ms
[debug] Load.apply: config.delegates took 0.366ms
[debug] Load.apply: Def.make(settings)... took 52.9952ms
[debug] Load.apply: structureIndex took 14.7162ms
[debug] Load.apply: mkStreams took 0.0029ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to clickstream-data-pipeline (in build file:/C:/Users/DELL/Desktop/sparkAssignment/de/clickstream-data-pipeline/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
