[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (Oracle Corporation Java 1.8.0_333)
[warn] sbt version mismatch, using: 1.7.1, in build.properties: "1.7.0", use 'reboot' to use the new value.
[debug]                                     Load.loadUnit: plugins took 99.0077ms
[debug]                                     Load.loadUnit: defsScala took 0.0104ms
[debug] [Loading] Scanning directory C:\Users\DELL\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.5583 ms
[debug]                                         Load.resolveProject(global-plugins) took 25.2736ms
[debug]                                       Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\DELL\.sbt\1.0\plugins, plugins: List(<none>))) took 40.5659ms
[debug] [Loading] Done in C:\Users\DELL\.sbt\1.0\plugins, returning: (global-plugins)
[debug]                                     Load.loadUnit: loadedProjectsRaw took 48.1561ms
[debug]                                     Load.loadUnit: cleanEvalClasses took 0.1305ms
[debug]                                   Load.loadUnit(file:/C:/Users/DELL/.sbt/1.0/plugins/, ...) took 151.1973ms
[debug]                                 Load.apply: load took 167.112ms
[debug]                                 Load.apply: resolveProjects took 1.7182ms
[debug]                                 Load.apply: finalTransforms took 28.9011ms
[debug]                                 Load.apply: config.delegates took 1.8753ms
[debug]                                 Load.apply: Def.make(settings)... took 161.8757ms
[debug]                                 Load.apply: structureIndex took 43.5622ms
[debug]                                 Load.apply: mkStreams took 0.0603ms
[info] loading global plugins from C:\Users\DELL\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug]                               Load.defaultLoad until apply took 2240.0908ms
[debug]                                         Load.loadUnit: plugins took 23.5123ms
[debug]                                         Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project
[debug]                                           Load.loadUnit: mkEval took 0.8761ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8596 ms
[info] loading settings for project clickstream-data-pipeline-build from idea1.sbt ...
[debug]                                             Load.resolveProject(clickstream-data-pipeline-build) took 3.0505ms
[debug]                                           Load.loadTransitive: finalizeProject(Project(id clickstream-data-pipeline-build, base: C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project, plugins: List(<none>))) took 5.2755ms
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project, returning: (clickstream-data-pipeline-build)
[debug]                                         Load.loadUnit: loadedProjectsRaw took 28.349ms
[debug]                                         Load.loadUnit: cleanEvalClasses took 1.2625ms
[debug]                                       Load.loadUnit(file:/C:/Users/DELL/Desktop/sparkAssignment/de/clickstream-data-pipeline/project/, ...) took 54.062ms
[debug]                                     Load.apply: load took 55.6887ms
[debug]                                     Load.apply: resolveProjects took 0.0806ms
[debug]                                     Load.apply: finalTransforms took 12.4822ms
[debug]                                     Load.apply: config.delegates took 0.3112ms
[debug]                                     Load.apply: Def.make(settings)... took 55.4544ms
[debug]                                     Load.apply: structureIndex took 24.3613ms
[debug]                                     Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]                                   Load.loadUnit: plugins took 285.2429ms
[debug]                                   Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline
[debug]                                     Load.loadUnit: mkEval took 0.5658ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3277 ms
[info] loading settings for project clickstream-data-pipeline from build.sbt ...
[debug]                                       Load.resolveProject(clickstream-data-pipeline) took 39.9952ms
[debug]                                     Load.loadTransitive: finalizeProject(Project(id clickstream-data-pipeline, base: C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline, plugins: List(<none>))) took 42.4103ms
[debug] [Loading] Done in C:\Users\DELL\Desktop\sparkAssignment\de\clickstream-data-pipeline, returning: (clickstream-data-pipeline)
[debug]                                   Load.loadUnit: loadedProjectsRaw took 1986.3596ms
[debug]                                   Load.loadUnit: cleanEvalClasses took 9.2153ms
[debug]                                 Load.loadUnit(file:/C:/Users/DELL/Desktop/sparkAssignment/de/clickstream-data-pipeline/, ...) took 2281.2216ms
[debug]                               Load.apply: load took 2282.6695ms
[debug]                               Load.apply: resolveProjects took 0.1253ms
[debug]                               Load.apply: finalTransforms took 30.9156ms
[debug]                               Load.apply: config.delegates took 0.2503ms
[debug]                               Load.apply: Def.make(settings)... took 83.2423ms
[debug]                               Load.apply: structureIndex took 39.6121ms
[debug]                               Load.apply: mkStreams took 0.0029ms
[info] set current project to clickstream-data-pipeline (in build file:/C:/Users/DELL/Desktop/sparkAssignment/de/clickstream-data-pipeline/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60748 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60748, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to clickstream-data-pipeline (in build file:/C:/Users/DELL/Desktop/sparkAssignment/de/clickstream-data-pipeline/)
[debug] > Exec(idea-shell, None, None)
